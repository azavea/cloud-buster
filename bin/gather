#!/usr/bin/env python3

# The MIT License (MIT)
# =====================
#
# Copyright © 2020 Azavea
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the “Software”), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

import argparse
import ast

import cloudbuster


def cli_parser() -> argparse.ArgumentParser:
    parser = argparse.ArgumentParser()
    parser.add_argument('--backstop', required=True, type=ast.literal_eval)
    parser.add_argument('--bounds', required=False, nargs='+', type=float)
    parser.add_argument('--delete', required=False,
                        default=True, type=ast.literal_eval)
    parser.add_argument('--index', required=True, type=int)
    parser.add_argument('--name', required=True, type=str)
    parser.add_argument('--output-path', required=True, type=str)
    parser.add_argument('--working-dir', required=False, type=str)
    parser.add_argument('--sentinel-path', required=True, type=str)
    parser.add_argument('--architecture', required=False, type=str)
    parser.add_argument('--weights', required=False, type=str)
    parser.add_argument('--s2cloudless', required=False,
                        default=False, type=ast.literal_eval)
    return parser


if __name__ == '__main__':
    args = vars(cli_parser().parse_args())
    sentinel_path = args.pop('sentinel_path', None)
    output_path = args.pop('output_path', None)
    index = args.pop('index', None)
    name = args.pop('name', None)
    backstop = args.pop('backstop', None)
    cloudbuster.gather(sentinel_path,
                       output_path,
                       index,
                       name,
                       backstop,
                       **args)
